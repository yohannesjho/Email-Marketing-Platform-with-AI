// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String
  createdAt DateTime  @default(now())

  contacts  Contact[]
  emails    Email[]
  templates Template[]
}

model Contact {
  id        String    @id @default(cuid())
  name      String
  email     String
  tags      Tag[]     // Many-to-many
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  userId    String

  emails    Email[]
}

model Tag {
  id       String     @id @default(cuid())
  value    String
  contacts Contact[]  // Many-to-many
}

model Template {
  id        String    @id @default(cuid())
  name      String
  subject   String
  body      String    
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  userId    String

  emails    Email[]
}

model Email {
  id          String      @id @default(cuid())
  subject     String
  body        String
  status      EmailStatus @default(DRAFT)  
  scheduledAt DateTime?    
  sentAt      DateTime?
  createdAt   DateTime    @default(now())

  user        User        @relation(fields: [userId], references: [id])
  userId      String

  template    Template?   @relation(fields: [templateId], references: [id])
  templateId  String?

  recipients  Contact[]   // Many-to-many
}

enum EmailStatus {
  DRAFT
  SCHEDULED
  SENT
  FAILED
}
